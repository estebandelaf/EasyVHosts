#!/bin/bash
#
# Easy Virtual Hosts
# Copyright (C) 2012 Esteban De La Fuente Rubio (esteban[at]sasco.cl)
#
# Este programa es software libre: usted puede redistribuirlo y/o modificarlo
# bajo los términos de la Licencia Pública General GNU publicada
# por la Fundación para el Software Libre, ya sea la versión 3
# de la Licencia, o (a su elección) cualquier versión posterior de la misma.
#
# Este programa se distribuye con la esperanza de que sea útil, pero
# SIN GARANTÍA ALGUNA; ni siquiera la garantía implícita
# MERCANTIL o de APTITUD PARA UN PROPÓSITO DETERMINADO.
# Consulte los detalles de la Licencia Pública General GNU para obtener
# una información más detallada.
#
# Debería haber recibido una copia de la Licencia Pública General GNU
# junto a este programa.
# En caso contrario, consulte <http://www.gnu.org/licenses/gpl.html>.
#
# Este archivo corresponde al programa principal, el cual
# cargará según sea necesario el resto de los componentes.
#
# Visite http://dev.sasco.cl/easyvhosts para más detalles.
#

# Prefijo para la ubicación de la aplicación, esto solo en el caso
# que la aplicación no sea instalada directamente en el directorio
# raiz (donde es PREFIX=""), se debe indicar el directorio padre
# donde ubicar la aplicación y automáticamente se creará dentro de
# la misma un directorio easyvhosts con el resto de los archivos
# Este valor deberá ser establecido al momento de la instalación
# de la aplicación
PREFIX="/home/delaf/app"
# Definir prefijo completo en caso que se haya definido uno
if [ -n "$PREFIX" ]; then PREFIX="$PREFIX/easyvhosts"; fi

# Cargar archivo de configuración de la aplicación
. $PREFIX/etc/easyvhosts/easyvhosts.conf

# Incluir bibliotecas necesarias para la ejecución, funciones
# básicamente
. $PREFIX/usr/lib/easyvhosts/standard.sh
. $PREFIX/usr/lib/easyvhosts/nic.sh

# buscar usuarios con id igual o mayor a FROM_UID
USERS=`awk -F : -v uid_from=$UID_FROM -v uid_to=$UID_TO '{if($3>=uid_from&&$3<=uid_to)print $1}' /etc/passwd`

# recorrer usuarios buscando directorios web en el home
for USER_NAME in $USERS; do
	# buscar home del usuario
	USER_HOME=`awk -F : -v user=$USER_NAME '{if($1==user)print $6}' /etc/passwd`
	# si el usuario no tiene directorio www se pasa al siguiente
	[ -d $USER_HOME/$WWW_DIR ] || continue
	# buscar dominios del usuarios
	for DOMAIN in `ls ${USER_HOME}/$WWW_DIR | grep -v $WWW_USER_DIR`; do
		# verificar que no sea un directorio a excluir
		[ `in_array $DOMAIN $WWW_EXCLUDE_DIRS` -eq 1 ] || continue
		# verificar que sean dominios
		[ `echo $DOMAIN | grep -q .cl$; echo $?` -eq 1 ] && continue
		# Iniciar procesamiento del directorio/domin
		log "---------------------------------------------------------------------"
		log "Procesando dominio $DOMAIN del usuario $USER_NAME"
		# comprobar que se tengan permisos para seguir procesando
		if [ `checkMapDomain $DOMAIN $USER_NAME` -eq 0 ]; then
			DOMAIN_NAME=${DOMAIN/.cl/}
			update_nic $DOMAIN_NAME
		else
			log " Usuario $USER_NAME no tiene asociado $DOMAIN (no se procesará)"
		fi
	done
done

